<?xml version="1.0" encoding="UTF-8"?>

<mffmmd xmlns="http://www.compart.com/ns/mff/mmd" version="202104">
   <!--
      **************************************************************************

      Copyright (C) Compart AG  2011

      Release: 202104

      **************************************************************************
-->
   <!--Settings for both input and output.-->

   <globals>
      <defaultchar char="003F"/>

      <!--Specifies how overlays are processed. With the value TRUE, the overlay is
                referenced and processed as a unit. With FALSE, the overlay is resolved into
                components (text, graphics, paths etc.) and added to the page content.-->

      <overlayasreference value="false"/>

      <!-- FALSE: segments are resoved inline TRUE : segments are included via IPS
            -->

      <pagesegmentasreference value="false"/>

      <!--GCGIDs (graphic character global identifier) are characters defined by IBM
                that are identified by 8-digit IDs. With the element "aliasmap" you can map unknown
                GCGID to known GCGID. Without a known GCGID, errors may occur during capturing and
                thus the GCGID area could be rasterized. Valid values are: "ifNotFoundInEncodings":
                map charcter if unable to find in all code pages; "always": always map character.
                Instead of assigning unknown to known GCGID, an assignment to Unicode characters can
                be specified in the element encodinglist. Attributes: "devicename": Specifies the
                name of the GCGID that is to be replaced. "map": Specifies the value of the GCGID
                used as replacement. "condition": Specifies the replacement condition. With
                "ifNotFoundInEncodings" a replacement is only carried out if the specified GCGID can
                not be found. With "always", the value of the attribute "devicename" is always
                replaced.-->

      <aliasmaplist>
         <aliasmap devicename="SD150300" map="SD150000" condition="IfNotFoundInEncodings"/>

         <!--U+007E: Tilde-->

         <aliasmap devicename="SD190300" map="SD190000" condition="IfNotFoundInEncodings"/>

         <!--U+00AF: Macron-->

         <aliasmap devicename="SD310000" map="SM150000" condition="IfNotFoundInEncodings"/>

         <!--U+03D5: Phi Small (open form)-->

         <aliasmap devicename="GF010002" map="GF010000" condition="IfNotFoundInEncodings"/>

         <!--U+2013: En Dash-->

         <aliasmap devicename="SS680000" map="SP100000" condition="IfNotFoundInEncodings"/>

         <!--U+2075: Five Superscript-->

         <aliasmap devicename="ND051001" map="ND051000" condition="IfNotFoundInEncodings"/>
      </aliasmaplist>
   </globals>

   <encodinglist>
      <!--Defines or starts a new encoding list. Each entry of the list
                consists of the character name that is to be replaced, the value of the attribute
                "devname", and the appropriate Unicode character ("char"). The name can be up to
                eight characters long and usually starts with "T". The list can be autogenerated
                using the attributes "mask", "from", "to" and "numberSystem". "mask" is a string
                with up to 7 characters. "numberSystem" defines which base (hex or dec) is used to
                generate the numbers. It also defines whether the values "to" and "from" are in
                hexadecimal or decimal format. The attribute "padding" is used to generate a name
                with 8 characters in length. Missing characters are filled up with the padding
                character '0', e.g. G0000032. The attribute type is boolean. The default value is
                'false'.-->

      <encoding name="T1WING">
         <entry devname="TRANS032" char="0020"/>

         <!--pencil-->

         <entry devname="TRANS033" char="270F"/>

         <!--black scissors-->

         <entry devname="TRANS034" char="2702"/>
      </encoding>
   </encodinglist>

   <!--Font specified by "family", "width" and "style" can be rasterised To
                rasterize the text, rasterize="always" has to be specified. Important: for all point
                sizes correct or dummy device names must be specified -->

   <fontlist>
      <!--<font family="OCR-A" serifstyle="SansSerif" spacing="Proportional" encoding="T1WING">        
         <face weight="Medium" width="Normal" style="Upright" rasterize="Always"
               baselineincrement="1150">        
            <raster size="12" devname="C0920AB0"/>
         </face>
      </font>-->
      <!--<font family="OCR-B">        
         <face weight="Medium" width="Normal" style="Upright" rasterize="Always">        
            <raster size="12" devname="C0920BB0"/>
         </face>
      </font>-->
      <!--<font family="Cache 16534" serifstyle="SansSerif" spacing="Proportional">        
         <face weight="Medium" width="Normal" style="Italic" rasterize="Always">        
            <raster size="22" devname="C0MXXX22"/>        
            <raster size="17" devname="C0MXXX17"/>
         </face>
      </font>-->
      <!--<font family="Arial" serifstyle="SansSerif" spacing="Proportional" encoding="T1WING">        
         <face weight="Medium" width="Normal" style="Upright" baselineincrement="1150">        
            <raster size="1" devname="C0A48410"/>        
            <raster size="2" devname="C0A48420"/>        
            <raster size="3" devname="C0A48430"/>        
            <raster size="4" devname="C0A48440"/>
         </face>        
         <face weight="Bold" width="Normal" style="Upright" baselineincrement="1150">        
            <raster size="1" devname="C0A58510"/>        
            <raster size="2" devname="C0A58520"/>        
            <raster size="3" devname="C0A58530"/>        
            <raster size="4" devname="C0A58540"/>        
            <raster size="5" devname="C0A58550"/>
         </face>
      </font>-->
   </fontlist>

   <codepagelist>
      <codepage name="T1001148" iana="IBM01148" default="yes"/>

      <!--<codepage name="T1001140" iana="IBM01140"/>-->
      <!--<codepage name="T1001141" iana="IBM01141"/>-->
   </codepagelist>

   <resourcelist>
      <fileslist>
         <!--Several directories can be specified for the search for external resources.
                The "path" is mandatory. "Type", "extension" and "resolution" are optional. However,
                the more detailed the settings are, the more specific the search will be. Valid
                values for "type" are: "overlay", "pageSegment", "codedFont", "codePage", "charSet",
                "formDef", "resourceLib", "pageDef", "object", "icc", "documentIndex". If the type
                is not defined, the path will be used for all types. The "extension" can be emtpy,
                <extension> or a wildcard. If the "resolution" is not specified, resources
                with any resolution will be searched in the path. -->
         <!--<files path="." type="TrueType" extension=""/>-->
      </fileslist>
   </resourcelist>

   <!--Assign tray ID-->

   <traylist>
      <inputtrays>
         <inputtray deviceid="1" name="Tray1"/>
         <inputtray deviceid="2" name="Tray2"/>
         <inputtray deviceid="3" name="Tray3"/>
         <inputtray deviceid="4" name="Tray4"/>
         <inputtray deviceid="5" name="Tray5"/>
         <inputtray deviceid="6" name="Tray6"/>
         <inputtray deviceid="7" name="Tray7"/>
         <inputtray deviceid="8" name="Tray8"/>
      </inputtrays>
   </traylist>

   <!--Settings for output.-->

   <output>
      <!--output codepage used for input data translation-->
      <!--<defaultcodepage value="IBM273"/>-->
   </output>

   <!--Settings for input.-->

   <input>
      <format>
         <!--<codepage iana="ISO-8859-1"/>-->
      </format>

      <!-- TRUE: use Carriage Control FALSE: Ignore Carriage Control -->

      <usecc value="true"/>

      <!-- Carriage Control Type. z: ASCII, a: ANSI, m: Machine, s: Siemens ANSI
            -->

      <cctype value="z"/>

      <!--type: { stream | record } value: 1 to 2 byte hex value ( if type: stream )
                value: record length (if type: record) -->

      <fileformat type="Stream" value="0x0D0A"/>

      <!--Ignore spaces and newline chars after AFP structure field (default value is
                FALSE). If user also want to ignore all characters between AFP structure field and
                newline character then specify treatAlphaNumericAsSpace as true-->

      <ignorespace value="false" treatAlphaNumericAsSpace="false"/>

      <!--If format is RECORD then only use the length specified in AFP header
                otherwise use the length specified in rclength (default: FALSE)-->

      <useafplength value="false"/>

      <!--Identify and delete AFP NOPs used in input data file. (default:
                FALSE)-->

      <deleteafpnopsfromdata value="false"/>

      <!--Record Descriptor word (RDW) will only be used if length of each record is
                speicified as a prefix within input data file. "value" represent the byte order
                defined in input data file. e.g. value="2143" If the value of rdw is specified then
                <fileformat> property will be ignored. "lengthincluded" is only set to TRUE if
                RDW is the part of orginal record length otherwise it should be set to FALSE.
                (default: TRUE) If user want to ignore some bytes defined as a prefix during record
                reading, He can use alpha values before or after rdw and application will ignore
                these byte during rdw reading e.g. if the value of rdw is "a2143bc" then first and
                last two bytes will be ignored during rdw reading. Note: Do not use alpha values
                between numeric because if alpha value is found between numeric all proceeding
                values will be ignored.-->

      <rdw value="" lengthincluded="true"/>

      <!--If channel code is found in data file but not defined in pagedef then skip
                to next page (default: FALSE)-->

      <skiptonextpage name="false"/>

      <!--use Table Reference Characters (default: FALSE). If No MCF is defined in
                Pagedef and usetrc value = "FALSE" then first codedfont defined in chars will be
                used. Note: MMD filter the parameter defaultcharset and defaultcodepage as default,
                that why the values of chars are removed and will not be used as
                default-->

      <usetrc value="false"/>

      <!-- chars parameter specifies the font name of 1 to 4 coded fonts seperated by
                ',' e.g. "AR12,HB10,AN14,HB132" -->

      <chars value=""/>

      <!--Specify default pagedefinition used to process current input
                file-->

      <defaultpagedef name=""/>

      <!--Specify default formdefinition used to process current input
                file-->

      <defaultformdef name=""/>

      <!--default charset for font ids not defined in MCF-->

      <defaultcharset value="C0420000"/>

      <!--If <ignorebeforelinecondition> is 'false' and 'before line' condition
                is occured within pagedef then it causes a switch to a new page format, and all
                before subpage and before line conditions in the new page format are ignored until
                one line has been processed. If <ignorebeforelinecondition> is 'true' and
                'before line' condition is satisfied within pagedef then it causes a switch to a new
                page format, and all before subpage and before line conditions in the new page
                format are ignored until current page has been processed.-->

      <ignorebeforelinecondition value="false"/>

      <!-- Determines if the size of the barcode depends only of the module width or
                if the barcode size should be adapted to the resolution of the target system. If the
                value is TRUE, the barcode size depends on the resolution. If the value is FALSE,
                the barcode size depends on the module width (default setting). Resolution is used
                to define the pixel raster to be used to print the barcode. The best result can be
                achieved if the measurement resolution of the target filter is used. If the
                resolution is omitted or set to 0, then the resolution of the barcode object is
                used. -->

      <adjustbarcodesize value="false" resolution="0" minSize="90%" maxSize="100%"/>

      <!-- Determines which start character algorithm is used for Code 128 (AIM
                USS-128). Normally the current algorithm, defined in the current ISO specification
                is used. In the past this algorithm has changed and there exist some barcode readers
                not supporting the current standard. The default is to use the value standard and
                use the current standard. If the algorithm from 1986 should be used, the value 1986
                must be set. -->

      <useCode128Algorithm value="standard"/>

      <!-- process IMM structured fields: TRUE : resolve all information given by
                medium map and do not provide medium map name by MFF interface FALSE : provide only
                medium map name by MFF interface (passthrough mode) -->

      <processmediummap value="false"/>

      <!--Determines which code page (IANA name) is used for texts in
                NOPs.-->

      <commentsdefaultcodepage iana="IBM500"/>

      <!--Specifies whether NOPs are read and how they are
                provided.-->
      <!--Attribute: value @comment: true: NOPs are read. false: NOPs are ignored (improves speed).
            -->

      <readcomments value="true"/>

      <!--Specifies whether NOPs are added to the pages or are available on the
                pages. true: NOPs are written to the pages as comments. false (default): NOPs are
                ignored.-->

      <addcommentstopage value="false"/>

      <!--Determines whether TLEs are read or not. -->
      <!--Attribute: value @comment: TRUE: Read TLEs. (Default) FALSE: Ignore Reading TLEs (may
                increase processing speed). -->

      <ReadTLEs value="true"/>
   </input>
</mffmmd>
